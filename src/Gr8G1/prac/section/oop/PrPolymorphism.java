package Gr8G1.prac.section.oop;

public class PrPolymorphism {
  /*
   * # 객체 지향 프로그래밍(OOP)
   *
   * 객체 지향 프로그래밍 4대 요소
   *  1. 캡슐화
   *  2. 상속
   *  3. 추상화
   *  4. *다형성*
   *
   */

  /*
   * # 다형성
   *
   * 다형성(Polymorphism)이란?
   *  - 하나의 객체가 여러 가지 형태를 가질 수 있는 성질을 의미한다.
   *  > 오버로딩, 오버라이딩 또한 다형성의 성질을 보여준다.
   *  >> 한줄 정의: 참조 변수의 타입과 인스턴스(객체)의 타입의 불일치다.
   *
   * 장점
   *  1. 여러 객체를 하나의 타입으로 관리가 가능하기 때문에 코드 관리가 편리해지고 유지보수가 용이하다.
   *  2. 코드 재사용성이 높진다.
   *  3. 클래스간 의존성이 줄어들어 확장성이 높고 결합도가 낮아져 안전성이 높아진다.
   *
   * 참조 변수의 타입 변환
   *  - ! 상속 관계가 성립되어야한다. (상위-하위)
   *  - 하위 -> 상위 타입 변환(업캐스팅) 형변환 연산자 생략가능
   *    > 반대의 경우 상위 -> 하위 (다운캐스팅) 형변환 연산자 생략 불가
   *
   * 매개 변수의 타입 변환
   *  - ! 상속 관계가 성립되어야한다. (상위-하위)
   *  - 상속 관계가 성립된 인자를 매개변수로 취할 수 있다.
   *
   * 업/다운 캐스트 가능 여부 확인
   *  - 참조변수 instanceof 타입
   *
   */
}

