package Gr8G1.prac.section1;

public class PrCFS {
  public static void main(String[] args) {
    /*
     * # if
     * - if 문은 조건식 결과에 "{}" 구문 실행 여부를 결정, 조건식에 참 또는 거짓의 값을 산출할 수 있는 연산식이나 boolean이 올 수 있다.
     * - 실행 구문이 단일(1줄 코드)구문 일시 축약형태로 표현이 가능하다.
     *
     * >  if (조건식) {
     *      // 조건식이 참일 경우 실행 ~
     *    }
     *
     *    if (조건식) {
     *      // 조건식이 '참'일 경우 실행 ~
     *    } else {
     *      // 조건식이 "거짓"일 경우 실행 ~
     *    }
     *
     *    if (조건식1) {
     *      // 조건식1이 '참'일 경우 실행 ~
     *    } else if (조건식2) {
     *      // 조건식2이 '참'일 경우 실행 ~
     *    } else {
     *      // 모든 조건식이 "거짓"일 경우 실행
     *    }
     */

    /*
     * # switch
     * - 변수값 영역에서의 연산 수행이 가능하다.
     *
     * ! 주의: 변수로 boolean | 사용자 정의 타입의 값을 줄 수 없다. (의도적인 초기 1회 실행 보장 불가)
     *
     * > switch (변수) {
     *     case 변수값:
     *     case 변수값:
     *       실행 구문;
     *       break;
     *     case 변수값:
     *       실행 구문;
     *       break;
     *     default:
     *       실행 구문;
     *       break;
     *   }
     *
     * Enhanced switch -> java v14~
     * > switch (변수) {
     *     case 변수값
     *         , (변수값) -> 실행 구문;
     *     case 변수값 -> 실행 구문;
     *   }
     */

    /*
     * # for
     * - 조건식을 충족할 때까지 실행구문을 반복한다.
     * - break: break 사용하여 실행을 중지할 수 있다.
     * - continue: continue 사용하여 이후 구문을 건너뛸 수 있다. (조건식으로 회귀)
     * - 라벨: 중첩된 구문 안에서의 특정 영역(중첩시 상위)의 반복문 종료 또는 회귀는 라벨을 활용하여 중지할 수 있다.
     *    - break 라벨;
     *    - continue 라벨;
     *
     * ! 주의: break 반복문 context를 넘어설 수 없다.
     *
     * > 라벨 : for (초기화식; 조건식; 증감식) {
     *     실행 구문
     *
     *     for (초기화식; 조건식; 증감식) {
     *       실행 구문
     *     }
     *   }
     *
     * Enhanced for -> java v5~
     *  > for (초기화식: 표현값) {
     *      실행 구문;
     *    }
     */

    /*
     * # while
     * - 조건식을 충족할 때까지 실행구문을 반복한다.
     * - break: break 사용하여 실행을 중지할 수 있다.
     * - continue: continue 사용하여 이후 구문을 건너뛸 수 있다. (조건식으로 회귀)
     * - 라벨: 중첩된 구문 안에서의 특정 영역(중첩시 상위)의 반복문 종료 또는 회귀는 라벨을 활용하여 중지할 수 있다.
     *    - break 라벨;
     *    - continue 라벨;
     *
     * ! 주의: break 반복문 context를 넘어설 수 없다.
     * ! 주의: 조건식에 true 값을 선언하여 의도적으로 무한(infinity) 반복을 진행 할 수 있다.
     *
     * > 라벨: while (조건식) {
     *     실행 구문
     *
     *     while (조건식) {
     *       실행 구문
     *
     *     }
     *   }
     */


    /*
     * # do while
     *
     * ! 주의: 조건 결과가 충족되지 않아도 무조건 1회 실행이 보장된다.
     *
     * > do {
     *    실행 구문
     *  } while (조건);
     */


    /*
     * # break & return 차이
     *
     * break: 가장 가까이에 있는 하나의 반복문을 종료시킨다.
     * return: 실행 중인 해당 함수를 종료시킨다. (반복문을 포함하는 함수(메서드))
     */
  }
}
