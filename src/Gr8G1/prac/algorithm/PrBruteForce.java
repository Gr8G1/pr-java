package Gr8G1.prac.algorithm;

public class PrBruteForce {
  /*
   * # 완전 탐색
   *
   * 완전 탐색이란?
   *  - 시행착오 방법론으로 모든 값을 대입하는 방법을 말한다.
   *    무차별(질서가없는) 대입(모든 조합/대입 가능한 경우의 수를 시행)을 통해 수많은 시행착오를 통과하여 문제를 해결하는 방식
   *    > TC/SC 고려하지 않고 최악의 시나리오를 취한다하여도 오직 해답을 찾고자 할때 취하는 1차원적 방식
   *
   * 완전 탐색을 시도하는 경우
   *  1. 문제 해결(해답)을 위한 적당한(대체 가능한) 해결방법이 없을때
   *  2. 문제 해결을 위한 여러 해결법이 존재하고 각각의 해결방법을 확인하고자 할때
   *
   * 완전 탐색의 사용처
   *  1. 순차 검색(Sequential Search) : 배열의 특정 값이 존재 유무를 검사한다 (Index 0부터 마지막까지 차례대로 검색)
   *  2. 문자열 매칭(Brute-Force String Matching): 주어진 문자열에 특정 문자열 패턴이 존재 하는지 검색한다. (Index++ 증가 시키며 문자열을 순차대입 한다)
   *  3. 선택 정렬(Selection Sort) : 주어진 배열의 요소를 오름차순 또는 내림차순에 따라 정렬될 때까지 반복적으로 정렬을 수행
   *     > 현재 요소보다 작거나 큰 요소의 위치를 교환(swap)하며 정렬을 시행
   *  4. 버블 정렬(Bubble Sort): 주어진 배열의 요소를 오름차순 또는 내림차순에 따라 정렬될 때까지 반복적으로 정렬을 수행
   *     > 현재 요소와 다음 요소의 크기를 비교하여 두 요소의 위치를 변경하며 정렬을 시행
   *
   * 키워드
   *  - Brute Force vs Dynamic Programing
   *  - Closet-Pair Problems by Brute Force
   *  - Convex-Hull Problems by Brute Force
   *
   */
}
